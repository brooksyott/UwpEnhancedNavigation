<UserControl
    x:Class="Peamel.UwpEnhancedMasterDetails.EnhancedMasterDetails"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Peamel.UwpEnhancedMasterDetails"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400">
    <!--
            ==================================================================================
                     PAGE RESOURCES TO CUSTOMIZE THE LOOK AND FEEL
            ==================================================================================
     -->
    <UserControl.Resources>
        <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <local:BooleanToVisibilityInverseConverter x:Key="BooleanToVisibilityInverseConverter"/>
        <local:HamburgerButtonStateToVisibilityConverter x:Key="HamburgerButtonStateToVisibilityConverter"/>
        <local:HamburgerArrowStateToVisibilityConverter x:Key="HamburgerArrowStateToVisibilityConverter"/>
        <local:PreviousArrowStateToVisibilityConverter x:Key="PreviousArrowStateToVisibilityConverter"/>
        <x:String x:Key="HamburgerIcon">M1.230957,19.693036L30.768982,19.693036C31.506958,19.693036,32,20.185041,32,20.923019L32,22.154038C32,22.893054,31.506958,23.384999,30.768982,23.384999L1.230957,23.384999C0.49194336,23.384999,0,22.893054,0,22.154038L0,20.923019C0,20.185041,0.49194336,19.693036,1.230957,19.693036z M1.230957,9.8470059L30.768982,9.8470059C31.506958,9.8470059,32,10.339011,32,11.076989L32,12.30801C32,13.045987,31.506958,13.53903,30.768982,13.53903L1.230957,13.53903C0.49194336,13.53903,0,13.047025,0,12.30801L0,11.076989C0,10.339011,0.49194336,9.8470059,1.230957,9.8470059z M1.230957,0L30.768982,0C31.506958,-6.3337211E-08,32,0.49298194,32,1.2309594L32,2.4619804C32,3.1999579,31.506958,3.6930011,30.768982,3.6930013L1.230957,3.6930013C0.49194336,3.6930011,0,3.1999579,0,2.4619804L0,1.2309594C0,0.49298194,0.49194336,-6.3337211E-08,1.230957,0z</x:String>
        <x:String x:Key="PreviousArrowIconOrig">M11.299988,0L16.599976,0 7.0999756,8.8999959 32,8.8999959 32,12.399997 7.0999756,12.399997 16.5,21.299993 16.400024,21.399999 11.299988,21.399999 2.5999756,13.100009 0,10.699985z</x:String>
        <x:String x:Key="PreviousArrowIcon">M15.289001,0L20.484007,0 31.650999,15.953003 29.055021,19.658005 20.415007,32 15.35501,32 15.289001,31.906998 24.621,18.572998 0,18.572998 0,13.326004 24.621,13.326004z</x:String>
        <local:HamburgerCommands x:Key="hamburgerMenuClickedCommand" />
        <local:PreviousCommand x:Key="goBackClickedCommand" />
        <local:ArrowMenuCommand x:Key="ArrowMenuCommand" />
        <Style x:Key="PreviousArrowIconStyle" TargetType="Button" >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="RootGrid" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"
                              Height="40"
                              Width="40">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Icon">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding BackbuttonHoverForeground}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Icon">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SystemAltMediumColor}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Path x:Name="Icon" 
                                    VerticalAlignment="Stretch"
                                    HorizontalAlignment="Stretch"
                                    Width="18"
                                    Height="18"
                                    Stretch="Uniform"
                                    RenderTransformOrigin="0.5,0.5"
                                    Fill="{Binding BackbuttonForeground}" Data="{StaticResource PreviousArrowIcon}">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <RotateTransform Angle="0" />
                                            <ScaleTransform ScaleX="-1" ScaleY="1" />
                                        </TransformGroup.Children>
                                    </TransformGroup>
                            </Path.RenderTransform>
                            </Path>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HamburgerMenuIconStyle" TargetType="Button" >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="RootGrid" Background="{Binding PaneBackground}" Padding="{TemplateBinding Padding}"
                              Height="40"
                              Width="40">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Icon">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding HamburgerHoverForeground}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Icon">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SystemAltMediumColor}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Path x:Name="Icon" 
                                    VerticalAlignment="Stretch"
                                    HorizontalAlignment="Stretch"
                                    Width="18"
                                    Height="18"
                                    Stretch="Uniform"
                                    RenderTransformOrigin="0.5,0.5"
                                    Fill="{Binding PaneForeground}" Data="{StaticResource HamburgerIcon}">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <RotateTransform Angle="0" />
                                            <ScaleTransform ScaleX="-1" ScaleY="1" />
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>
    <Grid x:Name="MainSplitViewGrid"  Padding="0" Background="{x:Bind ShellBackground}" >
        <Grid Padding="0" Margin="0,0,0,0" BorderThickness="0" >

            <!--
            ==================================================================================
                     SPLIT VIEW - Implementing the primary navigation
            ==================================================================================
            -->
            <SplitView  x:Name="ShellSplitView"  Padding="0"  Margin="0,0,0,0" Visibility="Visible"
                   Background="{x:Bind ShellBackground}"
                   Foreground="{x:Bind ShellForeground}"
                   DisplayMode="{x:Bind ViewModel.DisplayMode, Mode=TwoWay}"
                   IsPaneOpen="{x:Bind ViewModel.IsPaneOpen, Mode=TwoWay}"
                   PaneClosing="PaneClosingHandler"
                   PaneClosed="PaneClosedHandler"
                   PaneOpening="PaneOpeningHandler"
                   PaneOpened="PaneOpenedHandler"
                   VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                   CompactPaneLength="{x:Bind CompactPaneLength}"
                   OpenPaneLength="{x:Bind OpenPaneLength}">
            <!--
            ==================================================================================
                     THE PAIN - AKA THE MASTER PAGE - AKA THE MENU
            ==================================================================================
            -->
                <SplitView.Pane>
                    <Grid  Background="{x:Bind PaneBackground}" BorderBrush="{x:Bind PaneBorderBrush}"  BorderThickness="{x:Bind PaneBorderThickness}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="50" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <!-- HEADER OF THE PANE/MENU -->                     
                        <Grid Grid.Row="0" Margin="2,0,0,0" Visibility="Visible">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                
                                <!-- The traditional hamburger menu -->
                                <Button x:Name="HamburgerButton" Grid.Column="0"
                                    Command="{StaticResource hamburgerMenuClickedCommand}"
                                    Style="{StaticResource HamburgerMenuIconStyle}"
                                    Visibility="{x:Bind ViewModel.HamburgerMenuState, Mode=OneWay, Converter={StaticResource HamburgerButtonStateToVisibilityConverter}}" 
                                    Margin="0,0,0,0"
                                    VerticalAlignment="Center"
                                    BorderThickness="0">
                                </Button>
                                <!-- WHERE THE TITLE CONTENT COULD GO -->
                                <ContentPresenter Grid.Column="1" Content="{x:Bind HamburgerTitleContent}" Background="{x:Bind PaneBackground}"/>
                            </Grid>
                        </Grid>

                        <!-- CONTENT OF THE PANE/MENU -->
                        <ContentPresenter Grid.Row="1" Margin="0,0,0,0" Tapped="PaneTappedEvent"
                                      Content="{x:Bind PainContent}" Background="{x:Bind PaneBackground}"></ContentPresenter>
                    </Grid>
                </SplitView.Pane>
            <!--
            ==================================================================================
                     THE MAIN CONTENT - AKA THE DETAILS PAGE 
            ==================================================================================
            -->
                <SplitView.Content>
                    <Grid>
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Content="{x:Bind MainContent}"></ContentPresenter>
                        <Grid  Margin="0,5,0,0" Visibility="Visible" VerticalAlignment="Top" HorizontalAlignment="Left">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <!-- A back button used when the content is small, instead of the hamburger menu, but still displays the menu -->
                                <Button x:Name="ArrowHamburgerButton" Grid.Column="0" 
                                    Style="{StaticResource PreviousArrowIconStyle}"
                                    Visibility="{x:Bind ViewModel.HamburgerMenuState, Mode=OneWay, Converter={StaticResource HamburgerArrowStateToVisibilityConverter}}" 
                                    Command="{StaticResource ArrowMenuCommand}"
                                    Margin="3,0,0,0"
                                    Background="Transparent"
                                    Foreground="{x:Bind BackbuttonForeground}"
                                    VerticalAlignment="Center"
                                    BorderThickness="0"/>

                                <!-- The back arrow to go back to the previous content -->
                                <Button  x:Name="PreviousButton" Grid.Column="0"
                                    Style="{StaticResource PreviousArrowIconStyle}"
                                    Visibility="{x:Bind ViewModel.HamburgerMenuState, Mode=OneWay, Converter={StaticResource PreviousArrowStateToVisibilityConverter}}" 
                                    Command="{StaticResource goBackClickedCommand}"
                                    Margin="3,0,0,0"
                                    Background="Transparent"
                                    Foreground="{x:Bind BackbuttonForeground}"
                                    VerticalAlignment="Center"
                                    BorderThickness="0"/>
                            </Grid>
                        </Grid>
                        <!--
                        ==================================================================================
                                 A GRID THAT OVERLAYS THE CONTENT TO HIDE IT 
                        ==================================================================================
                        -->
                        <Grid  x:Name="DisableContent2" Tapped="DisabledContent2Tapped"
                                Visibility="{x:Bind ViewModel.DisableContent2, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" 
                                Margin="0,0,0,0"
                                Background="Gray" Opacity="0.6"
                                VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>

                    </Grid>
                </SplitView.Content>
            </SplitView>
        </Grid>


        <!--
            ==================================================================================
                     A GRID THAT OVERLAYS THE CONTENT TO HIDE IT 
            ==================================================================================
            -->
        <Grid  x:Name="DisablePandAndContent" Tapped="DisabledPaneAndContentTapped"
                              Visibility="{x:Bind ViewModel.DisablePaneAndContent, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" 
                              Margin="0,0,0,0"
                              Background="Gray" Opacity="0.6"
                              VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>


        <!--
            ==================================================================================
                     A GRID THAT POPS UP OUT OF THE RIGHT EDGE 
            ==================================================================================
            -->
        <Grid x:Name="RightEdgePopup" Visibility="Visible"
                                  Margin="0,0,0,0" 
                                  Background="{x:Bind ShellBackground}"
                                  BorderThickness="0.5"
                                  BorderBrush="DarkGray"
                                  Padding="0"
                                  Tapped="RightEdgePopup_Tapped"
                                  VerticalAlignment="Stretch" HorizontalAlignment="Right">
            <Frame x:Name="RightPopupFrame"/>
            <!-- A pop on the right edge of the screen -->
        </Grid>
        
        <!--
        ==================================================================================
                 Center Popup
        ==================================================================================
        -->
        <Grid x:Name="CenterPopup" CornerRadius="10" Margin="0,45,0,10"
                Visibility="{x:Bind ViewModel.CenterPopupNavigationEnabled, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                BorderBrush="DarkGray" BorderThickness="1"
                Background="{x:Bind ShellBackground}"
                Tapped="CenterPopup_Tapped"
               VerticalAlignment="Center"  HorizontalAlignment="Center">
            <Frame x:Name="CenterPopupFrame" Padding="10"/>
        </Grid>
        <!--
        ==================================================================================
                 ADAPTIVE TRIGGERS TO ADJUST TO WINDOW RESIZING
        ==================================================================================
        -->
        <VisualStateManager.VisualStateGroups >
            <VisualStateGroup x:Name="WidthVisualStates" CurrentStateChanged="VisualStateChange_Event">
                <VisualState x:Name="LARGE">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{x:Bind LargeMinWindowWidth}" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="MEDIUM">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{x:Bind MediumMinWindowWidth}" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="SMALL">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{x:Bind SmallMinWindowWidth}" />
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</UserControl>
